container:
  attrs:
    app:
      app_context:
        data:
          yaml:
            class_name: AppContext
            module_path: app.contexts.app
        type: dependency
      base_feature_path:
        data:
          yaml:
            value: app.yml
        type: data
      base_path:
        data:
          yaml:
            value: app.yml
        type: data
      cli_interface_context:
        data:
          yaml:
            class_name: CliInterfaceContext
            module_path: app.contexts.cli
        type: dependency
      cli_interface_repo:
        data:
          yaml:
            class_name: YamlRepository
            module_path: app.repositories.cli
        type: dependency
      container_repo:
        data:
          yaml:
            class_name: YamlRepository
            module_path: app.repositories.container
        type: dependency
      container_yaml_base_path:
        data:
          yaml:
            value: app.yml
        type: data
      error_repo:
        data:
          yaml:
            class_name: YamlRepository
            module_path: app.repositories.error
        type: dependency
      error_yaml_base_path:
        data:
          yaml:
            value: app.yml
        type: data
      feature_container:
        data:
          yaml:
            class_name: FeatureContainer
            module_path: app.containers.feature
        type: dependency
      feature_context:
        data:
          yaml:
            class_name: FeatureContext
            module_path: app.contexts.feature
        type: dependency
      feature_repo:
        data:
          yaml:
            class_name: YamlRepository
            module_path: app.repositories.feature
        type: dependency
      feature_yaml_base_path:
        data:
          yaml:
            value: app.yml
        type: data
      flag:
        data:
          yaml:
            value: yaml
        type: data
      interface_yaml_base_path:
        data:
          yaml:
            value: app.yml
        type: data
    feature:
      add_cli_argument:
        data:
          yaml:
            class_name: AddCliArgument
            module_path: app.commands.cli
        type: dependency
      add_cli_command:
        data:
          yaml:
            class_name: AddCliCommand
            module_path: app.commands.cli
        type: dependency
      add_container_attribute:
        data:
          yaml:
            class_name: AddContainerAttribute
            module_path: app.commands.container
        type: dependency
      add_feature_handler:
        data:
          yaml:
            class_name: AddFeatureHandler
            module_path: app.commands.feature
        type: dependency
      add_new_error:
        data:
          yaml:
            class_name: AddNewError
            module_path: app.commands.error
        type: dependency
      add_new_feature:
        data:
          yaml:
            class_name: AddNewFeature
            module_path: app.commands.feature
        type: dependency
      add_new_object:
        data:
          yaml:
            class_name: AddNewObject
            module_path: app.commands.object
        type: dependency
      add_object_attribute:
        data:
          yaml:
            class_name: AddObjectAttribute
            module_path: app.commands.object
        type: dependency
      add_object_method:
        data:
          yaml:
            class_name: AddObjectMethod
            module_path: app.commands.object
        type: dependency
      add_object_method_parameters:
        data:
          yaml:
            class_name: AddObjectMethodParameters
            module_path: app.commands.object
        type: dependency
      cli_interface_repo:
        data:
          yaml:
            class_name: YamlRepository
            module_path: app.repositories.cli
        type: dependency
      container_repo:
        data:
          yaml:
            class_name: YamlRepository
            module_path: app.repositories.container
        type: dependency
      container_yaml_base_path:
        data:
          yaml:
            value: app.yml
        type: data
      error_repo:
        data:
          yaml:
            class_name: YamlRepository
            module_path: app.repositories.error
        type: dependency
      error_yaml_base_path:
        data:
          yaml:
            value: app.yml
        type: data
      feature_repo:
        data:
          yaml:
            class_name: YamlRepository
            module_path: app.repositories.feature
        type: dependency
      feature_yaml_base_path:
        data:
          yaml:
            value: app.yml
        type: data
      flag:
        data:
          yaml:
            value: yaml
        type: data
      get_object:
        data:
          yaml:
            class_name: GetObject
            module_path: app.commands.object
        type: dependency
      interface_yaml_base_path:
        data:
          yaml:
            value: app.yml
        type: data
      object_repo:
        data:
          yaml:
            class_name: YamlRepository
            module_path: app.repositories.object
        type: dependency
      object_yaml_base_path:
        data:
          yaml:
            value: app.yml
        type: data
      print_objects:
        data:
          yaml:
            class_name: PrintObjects
            module_path: app.commands.printing
        type: dependency
errors:
  CLI_ARGUMENT_ALREADY_EXISTS:
    message:
    - lang: en_US
      text: CLI argument with name or flag "{}" already exists
    name: CLI_ARGUMENT_ALREADY_EXISTS
  CLI_ARGUMENT_INVALID_FEATURE_ID:
    message:
    - lang: en_US
      text: Feature ID is required when adding a CLI argument to a command
    name: CLI_ARGUMENT_INVALID_FEATURE_ID
  CLI_COMMAND_ALREADY_EXISTS:
    message:
    - lang: en_US
      text: CLI command with for feature "{}" already exists
    name: CLI_COMMAND_ALREADY_EXISTS
  CLI_COMMAND_NOT_FOUND:
    message:
    - lang: en_US
      text: CLI command mapped to Feature ID "{}" not found
    name: CLI_COMMAND_NOT_FOUND
  CLI_INTERFACE_NOT_FOUND:
    message:
    - lang: en_US
      text: CLI interface with id "{}" not found
    name: CLI_INTERFACE_NOT_FOUND
  CONTAINER_ATTRIBUTE_ALREADY_EXISTS:
    message:
    - lang: en_US
      text: Container attribute "{}" already exists within group "{}"
    name: CONTAINER_ATTRIBUTE_ALREADY_EXISTS
  ERROR_ALREADY_EXISTS:
    error_code: ERROR_ALREADY_EXISTS
    message:
    - lang: en_US
      text: Error with id "{}" already exists
    name: ERROR_ALREADY_EXISTS
  FEATURE_ALREADY_EXISTS:
    error_code: FEATURE_ALREADY_EXISTS
    message:
    - lang: en_US
      text: Feature with id "{}" already exists
    name: FEATURE_ALREADY_EXISTS
  FEATURE_NOT_FOUND:
    error_code: FEATURE_NOT_FOUND
    message:
    - lang: en_US
      text: Feature with ID "{}" not found.
    name: FEATURE_NOT_FOUND
  INVALID_CONTAINER_ATTRIBUTE_DATA:
    message:
    - lang: en_US
      text: Container data for attribute with "{}" is invalid
    name: INVALID_CONTAINER_ATTRIBUTE_DATA
  INVALID_REQUEST_DATA:
    message:
    - lang: en_US
      text: 'Invalid request contains the following errors: "{}"'
    name: INVALID_REQUEST_DATA
  OBJECT_ALREADY_EXISTS:
    message:
    - lang: en_US
      text: Object with class name "{}" already exists
    name: OBJECT_ALREADY_EXISTS
  OBJECT_ATTRIBUTE_ALREADY_EXISTS:
    error_code: OBJECT_ATTRIBUTE_ALREADY_EXISTS
    message:
    - lang: en_US
      text: Object attribute with name "{}" already exists
    name: OBJECT_ATTRIBUTE_ALREADY_EXISTS
  OBJECT_METHOD_ALREADY_EXISTS:
    error_code: OBJECT_METHOD_ALREADY_EXISTS
    message:
    - lang: en_US
      text: Object method with name "{}" already exists on model object "{}"
    name: OBJECT_METHOD_ALREADY_EXISTS
  OBJECT_METHOD_NOT_FOUND:
    error_code: OBJECT_METHOD_NOT_FOUND
    message:
    - lang: en_US
      text: Method with name "{}" not found in model object "{}".
    name: OBJECT_METHOD_NOT_FOUND
  OBJECT_METHOD_PARAMETER_ALREADY_EXISTS:
    error_code: OBJECT_METHOD_PARAMETER_ALREADY_EXISTS
    message:
    - lang: en_US
      text: Object method "{}.{}" already has a parameter named "{}".
    name: OBJECT_METHOD_PARAMETER_ALREADY_EXISTS
  OBJECT_NOT_FOUND:
    message:
    - lang: en_US
      text: Object with id "{}" not found
    name: OBJECT_NOT_FOUND
features:
  groups:
    cli:
      features:
        add_argument:
          functions:
          - attribute_id: add_cli_argument
            name: Add CLI Argument
          name: Add CLI Argument
          request_type_path: app.configs.requests.AddCliArgument
        add_command:
          functions:
          - attribute_id: add_cli_command
            name: Add CLI Command
          name: Add CLI Command
          request_type_path: app.configs.requests.AddCliCommand
    container:
      features:
        add_attribute:
          functions:
          - attribute_id: add_container_attribute
            name: Add Container Attribute
          name: Add Container Attribute
          request_type_path: app.configs.requests.AddContainerAttribute
    error:
      features:
        new:
          functions:
          - attribute_id: add_new_error
            name: Add New Error
          name: Add New Error
          request_type_path: app.configs.requests.AddNewError
    feature:
      features:
        add_handler:
          description: Add Feature Handler
          handlers:
          - attribute_id: add_feature_handler
            name: AddFeatureHandler
          name: Add Feature Handler
          request_type_path: app.configs.requests.AddFeatureHandler
        new:
          functions:
          - attribute_id: add_new_feature
            name: Add New Feature
          name: Add New Feature
          request_type_path: app.configs.requests.AddNewFeature
    object:
      features:
        add_attribute:
          description: Add an attribute to a model object.
          handlers:
          - attribute_id: add_object_attribute
            name: Add Object Attribute
          name: Add New Feature
          request_type_path: app.configs.requests.AddObjectAttribute
        add_method:
          description: Adds a new method to a model object.
          handlers:
          - attribute_id: add_object_method
            name: Add Object Method
          name: Add Object Method
          request_type_path: app.configs.requests.AddObjectMethod
        add_method_parameters:
          description: Adds parameters to a model object method.
          handlers:
          - attribute_id: add_object_method_parameters
            name: Add Method Parameters
          name: Add Method Parameters
          request_type_path: app.configs.requests.AddObjectMethodParameters
        new:
          functions:
          - attribute_id: add_new_object
            name: Add New Object
          name: Add New Object
          request_type_path: app.configs.requests.AddNewObject
        print:
          description: Print One or Many Objects
          handlers:
          - attribute_id: get_object
            data_key: objects
            name: Get Object for Printing
            return_to_data: true
          - attribute_id: print_objects
            name: Print Objects to Python
          name: Print Objects
interfaces:
  cli:
    commands:
      cli.add_argument:
        arguments:
        - help: cli argument name
          name_or_flags:
          - name
          type: str
        - help: cli interface id
          name_or_flags:
          - -i
          - --interface-id
          required: true
          type: str
        - help: feature id
          name_or_flags:
          - --feature-id
          - -f
          required: true
          type: str
        - help: cli argument description
          name_or_flags:
          - -d
          - --description
          required: true
          type: str
        - choices:
          - command
          - parent_argument
          default: command
          help: cli argument type
          name_or_flags:
          - --arg-type
          type: str
        - choices:
          - str
          - int
          - float
          default: str
          help: cli argument data type
          name_or_flags:
          - --type
          type: str
        - help: optional cli argument flags
          name_or_flags:
          - --flags
          nargs: +
          type: str
        - action: store_true
          help: cli argument is required
          name_or_flags:
          - --required
          type: str
        - help: cli argument default
          name_or_flags:
          - --default
          type: str
        - action: store_true
          help: cli argument is positional
          name_or_flags:
          - --positional
          type: str
        - help: cli argument unique action
          name_or_flags:
          - --action
          type: str
        - help: cli argument value choices
          name_or_flags:
          - --choices
          nargs: +
          type: str
        - help: available number of cli argument values
          name_or_flags:
          - --nargs
          type: str
        - action: store_true
          help: convert argument value to object or object list
          name_or_flags:
          - --to-data
          type: str
        feature_id: cli.add_argument
        group_id: cli
        name: Add CLI Argument
      cli.add_command:
        arguments:
        - help: cli interface id
          name_or_flags:
          - --interface-id
          - -i
          required: true
          type: str
        - help: cli command key
          name_or_flags:
          - --command-key
          - -c
          required: true
          type: str
        - help: context group id
          name_or_flags:
          - --group-id
          - -g
          type: str
        - help: cli command name
          name_or_flags:
          - name
          type: str
        - help: cli command description
          name_or_flags:
          - --description
          - -d
          type: str
        - help: cli command feature key
          name_or_flags:
          - --feature-key
          type: str
        feature_id: cli.add_command
        group_id: cli
        name: Add CLI Command
      container.add_attribute:
        arguments:
        - help: attribute container id
          name_or_flags:
          - id
          type: str
        - help: attribute container context group id
          name_or_flags:
          - --group-id
          - -g
          required: true
          type: str
        - choices:
          - data
          - dependency
          help: attribute container type
          name_or_flags:
          - --type
          - -t
          required: true
          type: str
        - help: container attribute infrastructure flag
          name_or_flags:
          - --flag
          - -f
          required: true
          type: str
        - help: container attribute data (separated by '=')
          name_or_flags:
          - --data
          nargs: +
          required: true
          type: str
        feature_id: container.add_attribute
        group_id: container
        help: add container attribute
        name: Add Container Attribute
      error.new:
        arguments:
        - help: error name
          name_or_flags:
          - name
          type: str
        - action: append
          help: error message by lang (separated by '=')
          name_or_flags:
          - --message
          - -m
          required: true
          to_data: true
          type: str
        feature_id: error.new
        group_id: error
        help: add new error
        name: Add New Error
      feature.add_handler:
        arguments:
        - help: feature handler name
          name_or_flags:
          - name
          type: str
        - help: parent feature id
          name_or_flags:
          - --feature-id
          - -f
          required: true
          type: str
        - help: command handler attribute id
          name_or_flags:
          - --attribute-id
          - -a
          required: true
          type: str
        - help: feature handler position
          name_or_flags:
          - --position
          type: int
        - help: feature handler custom parameter
          name_or_flags:
          - --param
          nargs: +
          to_data: true
          type: str
        - help: feature handler result data key
          name_or_flags:
          - --data-key
          type: str
        - action: store_true
          help: pass on handler error
          name_or_flags:
          - --pass-on-error
          type: str
        feature_id: feature.add_handler
        group_id: feature
        help: Adds a feature handler to the feature.
        name: Add Feature Handler
      feature.new:
        arguments:
        - help: feature name
          name_or_flags:
          - name
          type: str
        - help: feature group id
          name_or_flags:
          - --group-id
          - -g
          required: true
          type: str
        - help: feature id key
          name_or_flags:
          - --feature-key
          - -f
          required: true
          type: str
        - action: append
          help: feature workflow step handler (parameters separated by '=')
          name_or_flags:
          - --handler
          to_data: true
          type: str
        - help: feature request type validator path
          name_or_flags:
          - --request-type-path
          type: str
        - help: feature description
          name_or_flags:
          - --description
          type: str
        feature_id: feature.new
        group_id: feature
        help: add new feature
        name: Add New Feature
      object.add_attribute:
        arguments:
        - help: object attribute name
          name_or_flags:
          - name
          type: str
        - help: object attribute parent object id
          name_or_flags:
          - --object-id
          - -o
          required: true
          type: str
        - help: object attribute description
          name_or_flags:
          - --description
          - -d
          required: true
          type: str
        - choices:
          - str
          - int
          - float
          - bool
          - date
          - datetime
          - list
          - dict
          - model
          - poly
          help: object attribute data type
          name_or_flags:
          - --type
          - -t
          required: true
          type: str
        - choices:
          - str
          - int
          - float
          - bool
          - date
          - datetime
          - model
          help: object attribute inner data type (list/dict)
          name_or_flags:
          - --inner-type
          type: str
        - help: object id for object attribute model type
          name_or_flags:
          - --type-object-id
          type: str
        - help: object ids for object attribute poly type
          name_or_flags:
          - --poly-type-object-ids
          nargs: +
          type: str
        - action: store_true
          help: true if the object attribute value is required
          name_or_flags:
          - --required
          type: str
        - help: object attribute default value
          name_or_flags:
          - --default
          type: str
        - help: set of valid object attribute values
          name_or_flags:
          - --choices
          nargs: +
          type: str
        - help: object attribute type settings (separated by '=')
          name_or_flags:
          - --type-settings
          nargs: +
          type: str
        feature_id: object.add_attribute
        group_id: object
        help: add attribute to model object
        name: Add Object Attribute
      object.add_method:
        arguments:
        - help: object method name
          name_or_flags:
          - name
          type: str
        - choices:
          - factory
          - state
          help: object method type
          name_or_flags:
          - --type
          - -t
          required: true
          type: str
        - help: parent object id
          name_or_flags:
          - --object-id
          - -o
          required: true
          type: str
        - help: object method description
          name_or_flags:
          - --description
          - -d
          required: true
          type: str
        - choices:
          - str
          - int
          - float
          - bool
          - date
          - datetime
          - list
          - dict
          - model
          help: object method return type
          name_or_flags:
          - --return-type
          type: str
        - choices:
          - str
          - int
          - float
          - date
          - datetime
          - model
          help: inner return type for list or dict object method return type
          name_or_flags:
          - --return-inner-type
          type: str
        - help: object id for model object method return type
          name_or_flags:
          - --return-type-object-id
          type: str
        - action: append
          help: object method parameter
          name_or_flags:
          - --param
          to_data: true
          type: str
        feature_id: object.add_method
        group_id: object
        help: add method to model object
        name: Add Object Method
      object.add_method_params:
        arguments:
        - help: parent object id
          name_or_flags:
          - --object-id
          - -o
          required: true
          type: str
        - help: parent method name
          name_or_flags:
          - --method-name
          - -m
          required: true
          type: str
        - action: append
          help: object method parameter
          name_or_flags:
          - --param
          - -p
          required: true
          to_data: true
          type: str
        feature_id: object.add_method_parameters
        group_id: object
        help: add model object method parameters
        name: Add Method Parameters
      object.new:
        arguments:
        - help: model object name
          name_or_flags:
          - name
          type: str
        - help: id of model object context group
          name_or_flags:
          - --group-id
          - -g
          required: true
          type: str
        - choices:
          - entity
          - value_object
          - model
          help: model object type
          name_or_flags:
          - --type
          - -t
          required: true
          type: str
        - help: model object printed class name
          name_or_flags:
          - --class-name
          - -c
          required: true
          type: str
        - help: model object description
          name_or_flags:
          - --description
          - -d
          required: true
          type: str
        - help: id of model object base type
          name_or_flags:
          - --base-type-id
          type: str
        feature_id: object.new
        group_id: object
        help: add new model object
        name: Add Object
objects:
  cli_argument:
    attributes:
    - default: '[]'
      description: The name and any optional flags for the CLI argument.
      name: name_or_flags
      required: true
      type: str
    - description: The help text for the CLI argument.
      name: help
      required: true
      type: str
    - description: The default value for the CLI argument.
      name: default
      type: str
    - description: True if a value is required for the CLI argument.
      name: required
      type: bool
    - description: The number of allowed values for the CLI argument.
      name: nargs
      type: str
    - description: The pre-defined set of values for the CLI argument.
      inner_type: str
      name: choices
      type: list
    - description: The unique action for the CLI argument.
      name: action
      type: str
    - description: True if the CLI argument should be converted to an object or object
        list.
      name: to_data
      type: bool
    class_name: CliArgument
    description: A Command Line Interface (CLI) argument for use in a CLI command
      or as a parent argument in a CLI interface
    group_id: cli
    methods:
    - description: Initializes a new CliArgument object.
      name: new
      parameters:
      - description: The name of the CLI argument.
        name: name
        required: true
        type: str
      - default: '[]'
        description: The optional flags for the CLI argument.
        inner_type: str
        name: flags
        type: list
      - default: 'False'
        description: True if the CLI argument is required.
        name: required
        type: bool
      - default: 'False'
        description: True if the CLI argument is positional.
        name: positional
        type: bool
      return_type: model
      return_type_object_id: cli_argument
      type: factory
    - description: Returns the name of the CLI argument.
      name: get_name
      return_type: str
      type: state
    name: CLI Argument
    type: value_object
  cli_command:
    attributes:
    - description: The feature identifier for the CLI command.
      name: feature_id
      required: true
      type: str
    - description: The name of the CLI command.
      name: name
      required: true
      type: str
    - description: The context group identifier for the CLI command.
      name: group_id
      required: true
      type: str
    - description: The help text for the CLI command.
      name: help
      required: true
      type: str
    - description: The list of CLI arguments for a CLI command.
      inner_type: model
      name: arguments
      type: list
      type_object_id: cli_argument
    class_name: CliCommand
    description: A Command Line Interface (CLI) command for use in a CLI interface.
    group_id: cli
    methods:
    - description: Initializes a new CliCommand object.
      name: new
      parameters:
      - description: The group identifier for the CLI command.
        name: group_id
        required: true
        type: str
      - description: The key for the CLI command.
        name: command_key
        required: true
        type: str
      - description: The feature key for the CLI command.
        name: feature_key
        type: str
      return_type: model
      return_type_object_id: cli_command
      type: factory
    - description: Returns True if arguments exists with the specified flags.
      name: has_argument
      parameters:
      - description: The flags to check for.
        inner_type: str
        name: flags
        type: list
      return_type: bool
      type: state
    - description: Adds an argument to the CLI command.
      name: add_argument
      parameters:
      - description: The argument to add to the CLI command.
        name: argument
        required: true
        type: model
        type_object_id: cli_argument
      type: state
    name: CLI Command
    type: entity
  cli_interface:
    attributes:
    - description: The list of CLI commands for a CLI interface.
      inner_type: model
      name: commands
      type: list
      type_object_id: cli_command
    - description: The list of CLI parent arguments used by all CLI commands for the
        CLI interface.
      inner_type: model
      name: parent_arguments
      type: list
      type_object_id: cli_argument
    class_name: CliInterface
    description: A Command Line Interface (CLI) interface for use in a CLI application.
    group_id: cli
    methods:
    - description: Initializes a new CliInterface object.
      name: new
      return_type: model
      return_type_object_id: cli_interface
      type: factory
    - description: Adds a command to the CLI interface.
      name: add_command
      type: state
    - description: Returns the command with the specified feature identifier.
      name: get_command
      parameters:
      - description: The command identifier.
        name: id
        required: true
        type: str
      - description: Additional keyword arguments.
        name: kwargs
        type: kwargs
      return_type: model
      return_type_object_id: cli_command
      type: state
    - description: Returns True if parent arguments exist with the specified flags.
      name: has_parent_argument
      parameters:
      - description: The flags to check for.
        inner_type: str
        name: flags
        required: true
        type: list
      return_type: bool
      type: state
    - description: Adds a parent argument to the CLI interface.
      name: add_parent_argument
      parameters:
      - description: The parent argclearument to add to the CLI interface.
        name: argument
        required: true
        type: model
        type_object_id: cli_argument
      type: state
    - description: Sets an argument to the CLI interface.
      name: set_argument
      parameters:
      - description: The CLI argument to set.
        name: argument
        required: true
        type: model
        type_object_id: cli_argument
      - description: The type of CLI argument.
        name: arg_type
        required: true
        type: str
      - description: The feature identifier if the CLI argument is to be added to
          a CLI command.
        name: feature_id
        type: str
      type: state
    name: CLI Interface
    type: entity
  container_attribute:
    attributes:
    - choices:
      - data
      - dependency
      description: The type of container attribute.
      name: type
      required: true
      type: str
    class_name: ContainerAttribute
    description: A container attribute object.
    group_id: container
    name: Container Attribute
    type: entity
  data_attribute:
    attributes:
    - default: data
      description: The type of container attribute (defaults to data).
      name: type
      type: str
    - description: The data for a data attribute.
      name: data
      required: true
      type: model
      type_object_id: data_value
    base_type_id: container_attribute
    class_name: DataAttribute
    description: A container attribute object for a data-type values.
    group_id: container
    methods:
    - description: Initializes a new DataAttribute object.
      name: new
      return_type: model
      return_type_object_id: data_attribute
      type: factory
    name: Data Attribute
    type: entity
  data_value:
    attributes:
    - description: The value for the data attribute.
      name: value
      required: true
      type: str
    class_name: DataValue
    description: A container attribute data value object.
    group_id: container
    name: Data Value
    type: value_object
  date_settings:
    attributes:
    - description: The date formats for a date object attribute value.
      name: formats
      type: str
    base_type_id: object_type_settings
    class_name: DateSettings
    description: Type-specific settings for an date object attribute.
    group_id: object
    methods:
    - description: Initializes a new DateSettings object.
      name: new
      return_type: model
      return_type_object_id: date_settings
      type: factory
    name: Date Settings
    type: value_object
  date_time_settings:
    attributes:
    - description: The date formats for a datetime object attribute value.
      name: formats
      type: str
    - description: The output format for a datetime object attribute value.
      name: serialized_format
      type: str
    - choices:
      - require
      - allow
      - utc
      - reject
      description: The time zone policy for a datetime object attribute value.
      name: tzd
      type: str
    - description: Whether to convert the timezone to UTC for a datetime object attribute
        value.
      name: convert_tz
      type: bool
    - description: Whether to drop the timezone info for a datetime object attribute
        value.
      name: drop_tzinfo
      type: bool
    base_type_id: object_type_settings
    class_name: DateTimeSettings
    description: Type-specific settings for a datetime object attribute.
    group_id: object
    methods:
    - description: Initializes a DateTimeSettings object.
      name: new
      parameters:
      - description: Whether to convert the timezone to UTC for the datetime object
          value
        name: convert_tz
        type: bool
      - description: Whether to drop the timezone info for the datetime object value.
        name: drop_tzinfo
        type: bool
      return_type: model
      return_type_object_id: date_time_settings
      type: factory
    name: Date Time Settings
    type: value_object
  dependency_attribute:
    attributes:
    - default: dependency
      description: The type of container attribute (defaults to dependency).
      name: type
      type: str
    - description: The data for a dependency attribute.
      name: data
      required: true
      type: model
      type_object_id: dependency_value
    base_type_id: container_attribute
    class_name: DependencyAttribute
    description: A container attribute object for a dependency-type values.
    group_id: container
    methods:
    - description: Initializes a new DependencyAttribute object.
      name: new
      return_type: model
      return_type_object_id: dependency_attribute
      type: factory
    name: Dependency Attribute
    type: entity
  dependency_value:
    attributes:
    - description: The module path for a dependency attribute.
      name: module_path
      required: true
      type: str
    - description: The class name for the dependency attribute.
      name: class_name
      required: true
      type: str
    class_name: DependencyValue
    description: A container attribute dependency value object.
    group_id: container
    name: Dependency Value
    type: value_object
  dict_settings:
    attributes:
    - description: The coerce key for a dict object attribute value.
      name: coerce_key
      type: str
    base_type_id: object_type_settings
    class_name: DictSettings
    description: Type-specific settings for a dict object attribute.
    group_id: object
    methods:
    - description: Initializes a DictSettings object.
      name: new
      return_type: model
      return_type_object_id: dict_settings
      type: factory
    name: Dict Settings
    type: value_object
  entity:
    attributes:
    - description: The entity unique identifier.
      name: id
      required: true
      type: str
    class_name: Entity
    description: A domain model entity.
    group_id: object
    name: Entity
    type: model
  error:
    attributes:
    - description: The name of the error.
      name: name
      required: true
      type: str
    - description: The unique code for the error.
      name: error_code
      type: str
    - description: The error message translations for the error.
      inner_type: model
      name: message
      required: true
      type: list
      type_object_id: error_message
    class_name: Error
    description: An error object.
    group_id: error
    methods:
    - description: Initializes a new Error object.
      name: new
      parameters:
      - description: The name of the error.
        name: name
        required: true
        type: str
      return_type: model
      return_type_object_id: error
      type: factory
    - description: Sets the format arguments for the error messages.
      name: set_format_args
      parameters:
      - description: The format arguments for the error messages.
        name: args
        type: args
      type: state
    - description: Returns the error message text for the specified language.
      name: get_message
      parameters:
      - default: en_US
        description: The language of the error message text.
        name: lang
        type: str
      - description: The format arguments for the error message text.
        name: args
        type: args
      return_type: str
      type: state
    name: Error
    type: entity
  error_message:
    attributes:
    - description: The language of the error message text.
      name: lang
      required: true
      type: str
    - description: The error message text.
      name: text
      required: true
      type: str
    class_name: ErrorMessage
    description: An error message object.
    group_id: error
    methods:
    - description: Formats the error message text.
      name: format
      parameters:
      - description: The arguments to format the error message with.
        name: args
        type: args
      type: state
    name: Error Message
    type: value_object
  feature:
    attributes:
    - description: The name of the feature.
      name: name
      required: true
      type: str
    - description: The context group identifier for the feature.
      name: group_id
      required: true
      type: str
    - description: The description of the feature.
      name: description
      type: str
    - description: The path to the request type for the feature.
      name: request_type_path
      type: str
    - description: The command handler workflow for the feature.
      inner_type: model
      name: handlers
      type: list
      type_object_id: feature_handler
    - description: The parameters to log for the feature.
      inner_type: str
      name: log_params
      type: dict
    class_name: Feature
    description: A feature object.
    group_id: feature
    methods:
    - description: Initializes a new Feature object.
      name: new
      parameters:
      - description: The context group identifier of the feature.
        name: group_id
        required: true
        type: str
      - description: The key of the feature.
        name: feature_key
        required: true
        type: str
      return_type: model
      return_type_object_id: feature
      type: factory
    - description: Adds a handler to the feature.
      name: add_handler
      parameters:
      - description: The handler to add.
        name: handler
        required: true
        type: model
        type_object_id: feature_handler
      - description: The position to add the handler at.
        name: position
        type: int
      type: state
    name: Feature
    type: entity
  feature_handler:
    attributes:
    - description: The name of the feature handler.
      name: name
      required: true
      type: str
    - description: Whether to return the feature command result to the feature data
        context.
      name: return_to_data
      type: bool
    - description: The data key to store the feature command result if Return to Result
        is True.
      name: data_key
      type: str
    - description: Whether to pass on an error if the feature handler fails.
      name: pass_on_error
      type: bool
    class_name: FeatureHandler
    description: A handler object for a feature command.
    group_id: feature
    methods:
    - description: Adds a handler to the feature.
      name: new
      return_type: model
      return_type_object_id: feature_handler
      type: factory
    name: Feature Handler
    type: entity
  list_settings:
    attributes:
    - description: The minimum size for a list object attribute value.
      name: min_size
      type: int
    - description: The maximum size for a list object attribute value.
      name: max_size
      type: int
    base_type_id: object_type_settings
    class_name: ListSettings
    description: Type-specific settings for a list object attribute.
    group_id: object
    methods:
    - description: Initializes a ListSettings object.
      name: new
      parameters:
      - description: The minimum size for a list object attribute value.
        name: min_size
        type: int
      - description: The maximum size for a list object attribute value.
        name: max_size
        type: int
      return_type: model
      return_type_object_id: list_settings
      type: factory
    name: List Settings
    type: value_object
  model_attribute:
    class_name: ModelAttribute
    description: An attribute of a model object.
    group_id: object
    name: Model Attribute
    type: value_object
  model_data:
    class_name: ModelData
    description: A data representation of a model object.
    group_id: data
    methods:
    - description: Maps the model data to a model object.
      name: map
      parameters:
      - description: The type of model object to map to.
        name: type
        required: true
        type: type
      - default: to_object
        description: The role for the mapping.
        name: role
        type: type
      - description: Additional keyword arguments for mapping.
        name: kwargs
        type: kwargs
      return_type: model
      return_type_object_id: model_object
      type: state
    name: Model Data
    type: entity
  model_object:
    attributes:
    - description: The model object name.
      name: name
      required: true
      type: str
    - description: The context group identifier for the model object.
      name: group_id
      required: true
      type: str
    - choices:
      - entity
      - value_object
      - model
      default: entity
      description: The model object type.
      name: type
      required: false
      type: str
    - description: The model object class name.
      name: class_name
      required: true
      type: str
    - description: The model object description.
      name: description
      required: true
      type: str
    - description: The base model object identifer.
      name: base_type_id
      required: false
      type: str
    - default: '[]'
      description: The model object attributes.
      inner_type: model
      name: attributes
      type: list
      type_object_id: model_attribute
    - default: '[]'
      description: The model object methods.
      inner_type: model
      name: methods
      type: list
      type_object_id: object_method
    class_name: ModelObject
    description: A domain model component defined as a class object.
    group_id: object
    methods:
    - description: Initializes a new ModelObject object.
      name: new
      parameters:
      - description: The name of the model object.
        name: name
        required: true
        type: str
      - description: The unique identifier for the model object.
        name: id
        type: str
      - description: The printed class name for the model object.
        name: class_name
        type: str
      return_type: model
      return_type_object_id: model_object
      type: factory
    - description: Returns True if the attribute exists in the model object.
      name: has_attribute
      parameters:
      - description: The name of the attribute.
        name: name
        required: true
        type: str
      return_type: bool
      type: state
    - description: Adds an attribute to the model object.
      name: add_attribute
      type: state
    - description: Returns True if the method exists in the model object.
      name: has_method
      parameters:
      - description: The name of the method.
        name: name
        required: true
        type: str
      return_type: bool
      type: state
    - description: Adds a method to the model object.
      name: add_method
      parameters:
      - description: The method to add to the model object.
        name: method
        required: true
        type: model
        type_object_id: object_method
      type: state
    - description: Returns the method with the specified name.
      name: get_method
      parameters:
      - description: The name of the method.
        name: name
        required: true
        type: str
      return_type: model
      return_type_object_id: object_method
      type: state
    name: Model Object
    type: entity
  object_attribute:
    attributes:
    - description: The object attribute name.
      name: name
      required: true
      type: str
    - description: The object attribute description for inline documentation.
      name: description
      required: true
      type: str
    - choices:
      - str
      - int
      - float
      - bool
      - date
      - datetime
      - list
      - dict
      - model
      - poly
      description: The object attribute data type.
      name: type
      required: true
      type: str
    - choices:
      - str
      - int
      - float
      - bool
      - date
      - datetime
      - model
      description: The object attribute inner data type if the base type is a list
        or dict.
      name: inner_type
      type: str
    - description: The object identifier for the attribute type for object attributes
        with a model type or inner type.
      name: type_object_id
      type: str
    - description: The object identifiers for an object attribute with a poly type.
      inner_type: str
      name: poly_type_object_ids
      type: list
    - description: True if a value for the object attribute is required.
      name: required
      type: bool
    - description: The object attribute deault value.
      name: default
      type: str
    - description: The set of valid object attribute values.
      inner_type: str
      name: choices
      type: list
    - description: The type-specific settings for an object attribite.
      name: type_settings
      poly_type_object_ids:
      - string_settings
      - date_settings
      - date_time_settings
      - list_settings
      - dict_settings
      type: poly
    class_name: ObjectAttribute
    description: A model object attribute.
    group_id: object
    methods:
    - description: Initializes a new ObjectAttribute object.
      name: new
      parameters:
      - description: The name of the object attribute.
        name: name
        required: true
        type: str
      return_type: model
      return_type_object_id: object_attribute
      type: factory
    name: Object Attribute
    type: value_object
  object_method:
    attributes:
    - description: The name of the object method.
      name: name
      required: true
      type: str
    - choices:
      - factory
      - behavior
      description: The type of object method.
      name: type
      required: true
      type: str
    - description: The description of the object method for inline documentation.
      name: description
      required: true
      type: str
    - choices:
      - str
      - int
      - float
      - date
      - datetime
      - list
      - dict
      - model
      description: The return type of the object method.
      name: return_type
      type: str
    - choices:
      - str
      - int
      - float
      - bool
      - date
      - datetime
      - model
      description: The inner return type for object methods that return a list or
        dict.
      name: inner_return_type
      type: str
    - description: The return type object identifier for object methods with a model
        return type or inner return type.
      name: return_type_object_id
      type: str
    - default: '[]'
      description: The parameters for the object method.
      inner_type: model
      name: parameters
      type: list
      type_object_id: object_method_parameter
    class_name: ObjectMethod
    description: A model object method.
    group_id: object
    methods:
    - description: Initializes a new ObjectMethod object.
      name: new
      parameters:
      - description: The name of the object method.
        name: name
        required: true
        type: str
      return_type: model
      return_type_object_id: object_method
      type: factory
    - description: Returns True if the parameter exists in the object method.
      name: has_parameter
      parameters:
      - description: The name of the parameter.
        name: name
        required: true
        type: str
      return_type: bool
      type: state
    - description: Adds a parameter to the object method.
      name: add_parameter
      parameters:
      - description: The parameter to add to the object method.
        name: parameter
        required: true
        type: model
        type_object_id: object_method_parameter
      type: state
    name: Object Method
    type: value_object
  object_method_parameter:
    attributes:
    - description: The name of the object method parameter.
      name: name
      required: true
      type: str
    - choices:
      - str
      - int
      - float
      - bool
      - date
      - datetime
      - list
      - dict
      - model
      - type
      - args
      - kwargs
      description: The data tyoe of the object method parameter.
      name: type
      required: true
      type: str
    - description: The description of the object method parameter for inline documentation
      name: description
      required: true
      type: str
    - choices:
      - str
      - int
      - float
      - date
      - datetme
      - model
      description: The inner data type for object method parameters that are lists
        or dicts.
      name: inner_type
      type: str
    - description: The object identifier for the parameter type for object method
        parameters with a model type or inner type.
      name: type_object_id
      type: str
    - description: True if the object method parameter is required.
      name: required
      type: bool
    - description: The default value for the object method parameter.
      name: default
      type: str
    class_name: ObjectMethodParameter
    description: A model object method parameter.
    group_id: object
    methods:
    - description: Initializes a new ObjectMethodParameter object.
      name: new
      parameters:
      - description: The name of the object method parameter.
        name: name
        required: true
        type: str
      return_type: model
      return_type_object_id: object_method_parameter
      type: factory
    name: Object Method Parameter
    type: value_object
  object_type_settings:
    class_name: ObjectTypeSettings
    description: Type-specific settings for an object attribute.
    group_id: object
    name: Object Type Settings
    type: value_object
  string_settings:
    attributes:
    - description: The regular expression required for the string object attribute
        value.
      name: regex
      type: str
    - description: The minimum length for the string object attribute value.
      name: min_length
      type: int
    - description: The maximum length for the string object attribute value.
      name: max_length
      type: int
    base_type_id: object_type_settings
    class_name: StringSettings
    description: Type-specific settings for an string attribute.
    group_id: object
    methods:
    - description: Initializes a new StringSettings object.
      name: new
      parameters:
      - description: The minimum length for the string object attribute.
        name: min_length
        type: int
      - description: The maximum length for the string object attribute.
        name: max_length
        type: int
      return_type: model
      return_type_object_id: string_settings
      type: factory
    name: String Settings
    type: value_object
  value_object:
    class_name: ValueObject
    description: A domain model value object.
    group_id: object
    name: Value Object
    type: model
